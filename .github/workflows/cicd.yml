name: CI/CD Pipeline

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '**/*.md'
      - '**/*.cff'

  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**/*.md'
      - '**/*.cff'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  get-go-versions:
    name: Get Go Versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}

    steps:
      - name: Get Required Versions
        uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f  # v0.1.3
        id: get-language-versions
        with:
          language: "go"
          remove-patch-version: true
          max-versions: 3

  get-perl-versions:
    name: Get Perl Versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}

    steps:
      - name: Get Required Versions
        uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f  # v0.1.3
        id: get-language-versions
        with:
          language: "perl"
          remove-patch-version: true
          max-versions: 3

  get-python-versions:
    name: Get Python Versions (>= 3.9)
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}

    steps:
      - name: Get Required Versions
        uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f  # v0.1.3
        id: get-language-versions
        with:
          language: "python"
          min-version: 3.9
          remove-patch-version: true

  get-ruby-versions:
    name: Get Ruby Versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}

    steps:
      - name: Get Required Versions
        uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f  # v0.1.3
        id: get-language-versions
        with:
          language: "ruby"
          remove-patch-version: true
          max-versions: 3

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Perform ShellCheck Analysis
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/shellcheck/master/pipeline.sh)

  go-build:
    name: Build Go Code
    needs: get-go-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        go-versions: ${{ fromJson(needs.get-go-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7  # v5.0.1
        with:
          go-version: ${{ matrix.go-versions }}

      - name: Check code formatting
        run: |
          gofmt -l .
          FILES=$(gofmt -l .)
          if [ -n "$FILES" ]; then
            echo "The following files are not formatted correctly:"
            echo "$FILES"
            exit 1
          fi

      - name: Run Go Vet
        run: go vet ./src

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./src/...

      - name: Install errcheck
        run: go install github.com/kisielk/errcheck@latest

      - name: Run errcheck
        run: errcheck ./src/...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./src/...

      - name: Run Go Build
        run: go build -o bin/guessing-game ./src

  perl-lint:
    name: Perl Lint
    needs: get-perl-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-versions: ${{ fromJson(needs.get-perl-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Perl ${{ matrix.perl-versions }}
        uses: shogo82148/actions-setup-perl@28eae78d12c2bba1163aec45d123f6d9228bc307  # v1.29.0
        with:
          perl-version: ${{ matrix.perl-versions }}

      - name: install cpanm and files from cpanfile
        uses: perl-actions/install-with-cpanm@10d60f00b4073f484fc29d45bfbe2f776397ab3d  # v1.7.0
        with:
          cpanfile: "cpanfile"

      - name: Perform Perl Lint Analysis
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/perl-lint/master/pipeline.sh)

  bandit:
    name: Bandit
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Perform Bandit Analysis
        env:
          EXCLUDE_FILES: README.md
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/bandit/master/pipeline.sh)

  pycodestyle:
    name: Pycodestyle
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Perform Pycodestyle Analysis
        env:
          EXCLUDE_FILES: README.md
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pycodestyle/master/pipeline.sh)

  pydocstyle:
    name: Pydocstyle
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Perform Pydocstyle Analysis
        env:
          EXCLUDE_FILES: README.md
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pydocstyle/master/pipeline.sh)

  pylama:
    name: Pylama
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Perform Pylama Analysis
        env:
          EXCLUDE_FILES: README.md
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylama/master/pipeline.sh)

  pylint:
    name: Pylint
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Perform Pylint Analysis
        env:
          EXCLUDE_FILES: README.md
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylint/master/pipeline.sh)

  reek:
    name: Reek
    needs: get-ruby-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ruby-versions: ${{ fromJson(needs.get-ruby-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Ruby ${{ matrix.ruby-versions }}
        uses: ruby/setup-ruby@3783f195e29b74ae398d7caca108814bbafde90e  # v1.180.1
        with:
          ruby-version: ${{ matrix.ruby-versions }}

      - name: Perform Reek Analysis
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/reek/master/pipeline.sh)

  rubocop:
    name: Rubocop
    needs: get-ruby-versions
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ruby-versions: ${{ fromJson(needs.get-ruby-versions.outputs.version-matrix) }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Setup Ruby ${{ matrix.ruby-versions }}
        uses: ruby/setup-ruby@3783f195e29b74ae398d7caca108814bbafde90e  # v1.180.1
        with:
          ruby-version: ${{ matrix.ruby-versions }}

      - name: Perform Rubocop Analysis
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/rubocop/master/pipeline.sh)

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc  # 1.9.0
        with:
          toolchain: stable

      - name: Install Clippy
        run: rustup component add clippy

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc  # 1.9.0
        with:
          toolchain: stable

      - name: Run Tests
        run: cargo test

  format-rust:
    name: Rust Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc  # 1.9.0
        with:
          toolchain: stable

      - name: Install Rust Format
        run: rustup component add rustfmt

      - name: Run Rust Format
        run: cargo fmt -- --check

  cicd-pipeline:
    if: always()
    name: CI/CD Pipeline
    needs:
      - shellcheck
      - go-build
      - perl-lint
      - bandit
      - pycodestyle
      - pydocstyle
      - pylama
      - pylint
      - reek
      - rubocop
      - clippy
      - rust-tests
      - rust-format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Check Job Statuses
        run: .github/scripts/check-jobs.sh '${{ toJson(needs) }}'
